name: Build

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    permissions:
      contents: read
    strategy:
      matrix:
        os: [windows-2022, windows-11-arm]
    runs-on: ${{ matrix.os }}
    env:
      arch: ${{ matrix.os == 'windows-2022' && 'x64' || (matrix.os == 'windows-11-arm' && 'arm64' || 'unknown') }}
    steps:
    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      with:
        fetch-depth: 0
        
    - name: Install .NET Core
      uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5
      with:
        dotnet-version: 8.0.x
        
    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Build SyncTrayzor (Portable)
      run: task build-portable

    - name: Upload portable dist
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: SyncTrayzorPortable-${{ env.arch }}.zip
        path: ./release/SyncTrayzorPortable-${{ env.arch }}.zip

    - name: Build SyncTrayzor Installer
      run: task build-installer

    - name: Upload installer dist
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: SyncTrayzorSetup-${{ env.arch }}.exe
        path: ./release/SyncTrayzorSetup-${{ env.arch }}.exe
  release:
    if: github.ref_type == 'tag'
    needs: build
    runs-on: windows-2022
    permissions:
      contents: write
      discussions: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Download all build artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          path: "${{ github.workspace }}/release"
          merge-multiple: true

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Write private key to file
        run: |
          cat << EOF > synctrayzor_private_key.asc
          ${{ secrets.SYNCTRAYZOR_PRIVATE_KEY }}
          EOF
        shell: bash

      - name: Sign artifacts
        run: task sign-release
        env:
          SYNCTRAYZOR_PRIVATE_KEY: "${{ github.workspace }}\\synctrayzor_private_key.asc"
          SYNCTRAYZOR_PRIVATE_KEY_PASSPHRASE: "${{ secrets.SYNCTRAYZOR_PRIVATE_KEY_PASSPHRASE }}"

      - name: Upload signature file
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: sha512sum.txt.asc
          path: release/sha512sum.txt.asc

      - name: Get version from tag
        id: tag_name
        run: |
          echo "current_version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@32aa5b4c155d76c94e4ec883a223c947b2f02656 # v2
        with:
          validation_level: warn
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2
        with:
          files: |
            release/**
          name: Release ${{ steps.changelog_reader.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
          discussion_category_name: "Releases"
          preserve_order: true
          fail_on_unmatched_files: true
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Chocolatey Extensions
        run: choco install chocolatey-community-validation.extension -y
        shell: powershell

      - name: Build Chocolatey Package
        run: task build-choco-package
        env:
          SYNCTRAYZOR_VERSION: ${{ steps.changelog_reader.outputs.version }}
          SYNCTRAYZOR_RELEASE_NOTES: ${{ steps.changelog_reader.outputs.changes }}

      - name: Upload choco package
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          path: ./release/synctrayzor*.nupkg

      - name: Push Chocolatey Package
        if: steps.changelog_reader.outputs.status != 'prereleased' && steps.changelog_reader.outputs.status != 'unreleased'
        run: |
          $packagePath = Get-ChildItem "${{ github.workspace }}/release" -Filter "synctrayzor*.nupkg" | Select-Object -ExpandProperty FullName
          choco apikey --key ${{ secrets.CHOCO_API_KEY }} --source https://push.chocolatey.org/
          choco push $packagePath --source https://push.chocolatey.org/
        shell: powershell

      - name: Publish to winget
        uses: vedantmgoyal9/winget-releaser@main
        with:
          identifier: GermanCoding.SyncTrayzor
          installers-regex: '-x64\.exe$'
          max-versions-to-keep: 5 # keep only latest 5 versions
          token: ${{ secrets.WINGET_TOKEN }}